// Estas mediaquerys fueron tomadas incialmente de la grid desarrollada por Escueladigital:http://escueladigital.pe/

// Mediaquerys con unos breackpoints mejorados que brindan mejor adaptabilidad

// El parámetro es el nombre del breakpoint

@mixin hasta($size){
      @if map-has-key($specific_breakpoints,$size){
            // Si el parámetro es el nombre de un tamaño, se extrae desde el map
            @media screen and (max-width: map-get($specific_breakpoints,$size) - 1){
                  @content;
            }
      } @else {
            // Si el parámetro no existe en el map, se toma su valor para construir la media query
            @media screen and (max-width: $size){
                  @content;
            }
      }
}

@mixin to($size){
      @if map-has-key($specific_breakpoints,$size){
            // Si el parámetro es el nombre de un tamaño, se extrae desde el map
            @media screen and (max-width: map-get($specific_breakpoints,$size) - 1){
                  @content;
            }
      } @else {
            // Si el parámetro no existe en el map, se toma su valor para construir la media query
            @media screen and (max-width: $size){
                  @content;
            }
      }
}

@mixin desde($size){
      @if map-has-key($specific_breakpoints,$size){
            // Si el parámetro es el nombre de un tamaño, se extrae desde el map
            @media screen and (min-width: map-get($specific_breakpoints,$size)){
                  @content;
            }
      } @else {
            // Si el parámetro no existe en el map, se toma su valor para construir la media query
            @media screen and (min-width: $size){
                  @content;
            }
      }
}

@mixin from($size){
      @if map-has-key($specific_breakpoints,$size){
            // Si el parámetro es el nombre de un tamaño, se extrae desde el map
            @media screen and (min-width: map-get($specific_breakpoints,$size)){
                  @content;
            }
      } @else {
            // Si el parámetro no existe en el map, se toma su valor para construir la media query
            @media screen and (min-width: $size){
                  @content;
            }
      }
}

@mixin desde-hasta($desde,$hasta){
      @if map-has-key($specific_breakpoints,$desde) and map-has-key($specific_breakpoints,$hasta){
            @media screen and (min-width: map-get($specific_breakpoints,$desde)) and (max-width: map-get($specific_breakpoints,$hasta) - 1){
                  @content;
            }
      } @else if map-has-key($specific_breakpoints,$desde) and not map-has-key($specific_breakpoints,$hasta){
            @media screen and (min-width: map-get($specific_breakpoints,$desde)) and (max-width: $hasta) {
                  @content;
            }
      } @else if not map-has-key($specific_breakpoints,$desde) and map-has-key($specific_breakpoints,$hasta) {
            @media screen and (min-width: $desde) and (max-width: map-get($specific_breakpoints,$hasta) - 1){
                  @content;
            }
      } @else {
            @media screen and (min-width: $desde) and (max-width: $hasta){
                  @content;
            }
      }
}

@mixin from-to($desde,$hasta){
      @if map-has-key($specific_breakpoints,$desde) and map-has-key($specific_breakpoints,$hasta){
            @media screen and (min-width: map-get($specific_breakpoints,$desde)) and (max-width: map-get($specific_breakpoints,$hasta) - 1){
                  @content;
            }
      } @else if map-has-key($specific_breakpoints,$desde) and not map-has-key($specific_breakpoints,$hasta){
            @media screen and (min-width: map-get($specific_breakpoints,$desde)) and (max-width: $hasta) {
                  @content;
            }
      } @else if not map-has-key($specific_breakpoints,$desde) and map-has-key($specific_breakpoints,$hasta) {
            @media screen and (min-width: $desde) and (max-width: map-get($specific_breakpoints,$hasta) - 1){
                  @content;
            }
      } @else {
            @media screen and (min-width: $desde) and (max-width: $hasta){
                  @content;
            }
      }
}
